// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?
  baseImage   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  steps FormStep[]
}

model FormStep {
  id        String @id @default(cuid())
  productId String
  order     Int // Order of the step in the form

  // Each step can now have TWO questions
  type1     StepType // First question type
  question1 String // First question
  required1 Boolean  @default(true)

  type2     StepType? // Second question type (optional)
  question2 String? // Second question (optional)
  required2 Boolean   @default(false)

  // Pricing configuration for question 1
  pricingImpact1 PricingImpact @default(NONE)
  pricePerUnit1  Float?
  unit1          String?
  minValue1      Float?
  maxValue1      Float?
  defaultValue1  Float?

  // Pricing configuration for question 2
  pricingImpact2 PricingImpact @default(NONE)
  pricePerUnit2  Float?
  unit2          String?
  minValue2      Float?
  maxValue2      Float?
  defaultValue2  Float?

  // Conditional logic - stored as JSON
  // Format: { stepId: "xxx", value: "yes" }
  conditionalOn1 Json?
  conditionalOn2 Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  product Product      @relation(fields: [productId], references: [id], onDelete: Cascade)
  options StepOption[]

  @@unique([productId, order])
}

enum StepType {
  SELECT // Dropdown/radio selection
  NUMBER // Number input
  TEXT // Text input (future use)
  CHECKBOX // Multiple selection (future use)
}

enum PricingImpact {
  BASE // Sets the base price (first step usually)
  MULTIPLIER // Multiplies current price
  ADDITIVE // Adds fixed amount (quantity Ã— pricePerUnit)
  NONE // No pricing impact
}

model StepOption {
  id          String  @id @default(cuid())
  stepId      String
  questionNum Int     @default(1) // 1 or 2 - which question this option belongs to
  label       String // Display text
  value       String // Internal value
  price       Float? // Price for this option (for BASE pricing)
  imageUrl    String? // Optional image URL for this option
  order       Int // Order in the list

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  step FormStep @relation(fields: [stepId], references: [id], onDelete: Cascade)

  @@unique([stepId, questionNum, order])
}
