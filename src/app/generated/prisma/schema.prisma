// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                String   @id @default(cuid())
  name              String
  slug              String   @unique
  description       String?
  baseImageUrl      String?
  baseImagePublicId String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  steps FormStep[]
}

model FormStep {
  id        String @id @default(cuid())
  productId String
  order     Int // Order of the step in the form

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  questions Question[]

  @@unique([productId, order])
}

model Question {
  id     String @id @default(cuid())
  stepId String
  order  Int // Order of the question within the step

  type     StepType
  question String
  required Boolean  @default(true)

  // Pricing configuration
  pricingImpact PricingImpact @default(NONE)
  pricePerUnit  Float?
  unit          String?
  minValue      Float?
  maxValue      Float?
  defaultValue  Float?

  // Conditional logic - format: { questionId: "xxx", value: "yes" }
  conditionalOn Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  step    FormStep     @relation(fields: [stepId], references: [id], onDelete: Cascade)
  options StepOption[]

  @@unique([stepId, order])
}

enum StepType {
  SELECT // Dropdown/radio selection
  NUMBER // Number input
  TEXT // Text input (future use)
  CHECKBOX // Multiple selection (future use)
}

enum PricingImpact {
  BASE // Sets the base price (first step usually)
  MULTIPLIER // Multiplies current price
  ADDITIVE // Adds fixed amount (quantity Ã— pricePerUnit)
  NONE // No pricing impact
}

model StepOption {
  id            String  @id @default(cuid())
  questionId    String
  label         String // Display text
  value         String // Internal value
  price         Float? // Price for this option (for BASE pricing)
  imageUrl      String? // Optional image URL for this option
  imagePublicId String?
  order         Int // Order in the list

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@unique([questionId, order])
}
