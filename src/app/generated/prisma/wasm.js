
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  baseImage: 'baseImage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FormStepScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  order: 'order',
  type1: 'type1',
  question1: 'question1',
  required1: 'required1',
  type2: 'type2',
  question2: 'question2',
  required2: 'required2',
  pricingImpact1: 'pricingImpact1',
  pricePerUnit1: 'pricePerUnit1',
  unit1: 'unit1',
  minValue1: 'minValue1',
  maxValue1: 'maxValue1',
  defaultValue1: 'defaultValue1',
  pricingImpact2: 'pricingImpact2',
  pricePerUnit2: 'pricePerUnit2',
  unit2: 'unit2',
  minValue2: 'minValue2',
  maxValue2: 'maxValue2',
  defaultValue2: 'defaultValue2',
  conditionalOn: 'conditionalOn',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StepOptionScalarFieldEnum = {
  id: 'id',
  stepId: 'stepId',
  questionNum: 'questionNum',
  label: 'label',
  value: 'value',
  price: 'price',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.StepType = exports.$Enums.StepType = {
  SELECT: 'SELECT',
  NUMBER: 'NUMBER',
  TEXT: 'TEXT',
  CHECKBOX: 'CHECKBOX'
};

exports.PricingImpact = exports.$Enums.PricingImpact = {
  BASE: 'BASE',
  MULTIPLIER: 'MULTIPLIER',
  ADDITIVE: 'ADDITIVE',
  NONE: 'NONE'
};

exports.Prisma.ModelName = {
  Product: 'Product',
  FormStep: 'FormStep',
  StepOption: 'StepOption'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\msds\\Desktop\\myprojects\\nextjs\\karim-calc\\src\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\msds\\Desktop\\myprojects\\nextjs\\karim-calc\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/app/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Product {\n  id          String   @id @default(cuid())\n  name        String\n  slug        String   @unique\n  description String?\n  baseImage   String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  steps FormStep[]\n}\n\nmodel FormStep {\n  id        String @id @default(cuid())\n  productId String\n  order     Int // Order of the step in the form\n\n  // Each step can now have TWO questions\n  type1     StepType // First question type\n  question1 String // First question\n  required1 Boolean  @default(true)\n\n  type2     StepType? // Second question type (optional)\n  question2 String? // Second question (optional)\n  required2 Boolean   @default(false)\n\n  // Pricing configuration for question 1\n  pricingImpact1 PricingImpact @default(NONE)\n  pricePerUnit1  Float?\n  unit1          String?\n  minValue1      Float?\n  maxValue1      Float?\n  defaultValue1  Float?\n\n  // Pricing configuration for question 2\n  pricingImpact2 PricingImpact @default(NONE)\n  pricePerUnit2  Float?\n  unit2          String?\n  minValue2      Float?\n  maxValue2      Float?\n  defaultValue2  Float?\n\n  // Conditional logic - stored as JSON\n  // Format: { stepId: \"xxx\", value: \"yes\" }\n  conditionalOn Json?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  product Product      @relation(fields: [productId], references: [id], onDelete: Cascade)\n  options StepOption[]\n\n  @@unique([productId, order])\n}\n\nenum StepType {\n  SELECT // Dropdown/radio selection\n  NUMBER // Number input\n  TEXT // Text input (future use)\n  CHECKBOX // Multiple selection (future use)\n}\n\nenum PricingImpact {\n  BASE // Sets the base price (first step usually)\n  MULTIPLIER // Multiplies current price\n  ADDITIVE // Adds fixed amount (quantity Ã— pricePerUnit)\n  NONE // No pricing impact\n}\n\nmodel StepOption {\n  id          String @id @default(cuid())\n  stepId      String\n  questionNum Int    @default(1) // 1 or 2 - which question this option belongs to\n  label       String // Display text\n  value       String // Internal value\n  price       Float? // Price for this option (for BASE pricing)\n  order       Int // Order in the list\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  step FormStep @relation(fields: [stepId], references: [id], onDelete: Cascade)\n\n  @@unique([stepId, questionNum, order])\n}\n",
  "inlineSchemaHash": "0f7420c7067ff286cf3b552614142b69edfd14fe2eae431b97e74bb3f42cb60c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baseImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"steps\",\"kind\":\"object\",\"type\":\"FormStep\",\"relationName\":\"FormStepToProduct\"}],\"dbName\":null},\"FormStep\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type1\",\"kind\":\"enum\",\"type\":\"StepType\"},{\"name\":\"question1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required1\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"type2\",\"kind\":\"enum\",\"type\":\"StepType\"},{\"name\":\"question2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required2\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pricingImpact1\",\"kind\":\"enum\",\"type\":\"PricingImpact\"},{\"name\":\"pricePerUnit1\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minValue1\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxValue1\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"defaultValue1\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pricingImpact2\",\"kind\":\"enum\",\"type\":\"PricingImpact\"},{\"name\":\"pricePerUnit2\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minValue2\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxValue2\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"defaultValue2\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"conditionalOn\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"FormStepToProduct\"},{\"name\":\"options\",\"kind\":\"object\",\"type\":\"StepOption\",\"relationName\":\"FormStepToStepOption\"}],\"dbName\":null},\"StepOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionNum\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"step\",\"kind\":\"object\",\"type\":\"FormStep\",\"relationName\":\"FormStepToStepOption\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

